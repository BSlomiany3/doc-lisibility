Metadata-Version: 2.4
Name: doc_lisibility
Version: 0.1.0
Summary: Segmentation et scoring de lisibilit√© de documents (OCR helpers).
Author-email: Ton Nom <toi@example.com>
License: MIT
Keywords: ocr,segmentation,readability,ml
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: numpy>=1.21
Requires-Dist: pillow>=8.0
Requires-Dist: opencv-python>=4.5
Requires-Dist: torch>=1.13
Provides-Extra: dev
Requires-Dist: pytest>=7.0; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: mkdocs; extra == "dev"
Requires-Dist: mkdocs-material; extra == "dev"
Requires-Dist: mkdocstrings[python]; extra == "dev"

# Doc-Lisibility

Un outil de **scoring de lisibilit√© des documents scann√©s**.  
Le but est de s√©parer automatiquement les scans de **bonne qualit√©** de ceux de **mauvaise qualit√©**, gr√¢ce √† une pipeline bas√©e sur un mod√®le convolutionnel (type VGG-like) entra√Æn√© sur des caract√®res extraits.

---

## üìÇ Structure du projet

- `research/`  
  Contient les exp√©riences et prototypes :  
  - limites des approches classiques ML,  
  - segmentation manuelle,  
  - comparaison de mod√®les,  
  - fine-tuning du meilleur candidat.

- `src/docReadibilityScorer_app/`  
  Package Python principal :  
  - `segmentation.py` ‚Üí binarisation et extraction des caract√®res  
  - `model.py` ‚Üí d√©finition du mod√®le convolutionnel  
  - `scorer.py`, `utils.py` ‚Üí fonctions de scoring/auxiliaires  
  - `pipeline.py` ‚Üí pipeline compl√®te
  - `fine_tuned_vgg.pth` ‚Üí mod√®le pr√©-entra√Æn√© utilis√© dans la pipeline

- `tests/`  
  Tests unitaires et d‚Äôint√©gration avec **pytest**, incluant un dossier `mock_data/` pour les exemples `.png`.

- `documentation/`  
  Documentation MkDocs.

---

## ‚öôÔ∏è Installation

Cloner le repo et installer en mode d√©veloppement :

```bash
git clone https://github.com/BSlomiany3/doc-lisibility.git
cd doc-lisibility
python -m venv .venv
source .venv/Scripts/activate
pip install -e .[dev]
```

---

## ‚öôÔ∏è Utilisation

- Ajout des images √† scorer dans le dossier `src/data/input/`
- Modification des inputs du pipeline dans le fichier `pipeline.py`
- run `python -m docReadibilityScorer_app._pipeline` √† la ligne de commande
